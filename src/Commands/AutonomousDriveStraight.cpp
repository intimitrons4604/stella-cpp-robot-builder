// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "AutonomousDriveStraight.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

AutonomousDriveStraight::AutonomousDriveStraight(double speed): Command() {
    m_speed = speed;
        // Use requires() here to declare subsystem dependencies
    // eg. requires(chassis);
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::drivetrain.get());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void AutonomousDriveStraight::Initialize() {
    drivetrain = Robot::drivetrain;
}

// Called repeatedly when this Command is scheduled to run
void AutonomousDriveStraight::Execute() {
    // Drive forward or backward with set speed - no turning
    // Enable turbo so motor output is exactly the input speed and not scaled
    drivetrain->Drive(m_speed, 0, true);
}

// Make this return true when this Command no longer needs to run execute()
bool AutonomousDriveStraight::IsFinished() {
    // We would like the autonomous command to remain scheduled
    // We cannot simply run it once, as motor safety will shut off the motors
    // if we are not updating them within the timeout
    return false;
}

// Called once after isFinished returns true
void AutonomousDriveStraight::End() {
    drivetrain->StopMotors();
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void AutonomousDriveStraight::Interrupted() {
    End();
}
